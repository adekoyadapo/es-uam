---
# filebeat resources
apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: filebeat
  namespace: production
spec:
  type: filebeat
  version: 8.15.3
  elasticsearchRef:
    name: es-mon
    namespace: observability
  kibanaRef:
    name: kb-mon
    namespace: observability
  secureSettings:
  - secretName: es-prod-es-elastic-user
  config:
    filebeat:
      autodiscover:
        providers:
        - type: kubernetes
          node: ${NODE_NAME}
          hints.default_config.enabled: "false"
          templates:
          - condition.equals.kubernetes.namespace: production
            config:
            - paths: ["/var/log/containers/*${data.kubernetes.container.id}.log"]
              type: container
      modules:
        - module: kibana
          audit:
            enabled: true
            var.paths:
              - /usr/share/kibana/logs/audit.log
    setup.dashboards.enabled: false
    setup.template.name: elastic-logs-8
    setup.template.pattern: "elastic-logs-8*"
    output.elasticsearch:
      index: "elastic-logs-8"
      username: ${ELASTIC_USERNAME}
      password: ${ELASTIC_PASSWORD}
    processors:
    - add_host_metadata: {}
    - add_cloud_metadata: {}
    - add_kubernetes_metadata: {}
    - decode_json_fields:
        fields: ["message"]
        process_array: true
        target: ""
        overwrite_keys: true
        add_error_key: true 
    - add_fields:
        target: service
        fields:
          name: "es-prod"
          version: "8.15.3"
    logging.json: true
  daemonSet:
    podTemplate:
      spec:
        serviceAccountName: filebeat
        automountServiceAccountToken: true
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true # Allows to provide richer host metadata
        securityContext:
          runAsUser: 0
          # If using Red Hat OpenShift uncomment this:
          #privileged: true
        containers:
        - name: filebeat
          volumeMounts:
          - name: varlogcontainers
            mountPath: /var/log/containers
          - name: varlogpods
            mountPath: /var/log/pods
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
          - name: audit-logs
            mountPath: /usr/share/kibana/logs
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ELASTIC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: elastic-credentials
                  key: username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elastic-credentials
                  key: password
        volumes:
        - name: audit-logs
          persistentVolumeClaim:
            claimName: kibana-audit-logs-pvc
        - name: varlogcontainers
          hostPath:
            path: /var/log/containers
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat
  namespace: production
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  - nodes
  verbs:
  - get
  - watch
  - list
- apiGroups: ["apps"]
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups: ["batch"]
  resources:
  - jobs
  verbs:
  - get
  - list
  - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: production
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: production
- kind: ServiceAccount
  name: filebeat
  namespace: development
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
---
# ES and Kibana resources
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: es-prod
  namespace: production
spec:
  version: 8.15.3
  nodeSets:
  - name: default
    count: 1
    config:
      node.store.allow_mmap: false
      xpack.security.audit.enabled: true
      xpack.security.audit.logfile.events.include: "authentication_success"
      xpack.security.audit.logfile.events.emit_request_body: true
      xpack.security.audit.logfile.events.ignore_filters.system.users: ["*_system", "found-internal-*",  "_xpack_security", "_xpack", "elastic/fleet-server","_async_search", "found-internal-admin-proxy"]
      xpack.security.audit.logfile.events.ignore_filters.realm.realms : [ "_es_api_key" ]
      xpack.security.audit.logfile.events.ignore_filters.internal_system.indices : ["*ml-inference-native-*", "*monitoring-es-*"]
      xpack.http.ssl.verification_mode: "none"
    podTemplate:
      metadata:
        labels:
          scrape: es
        annotations:
          co.elastic.logs/enabled: "true"
  monitoring:
    metrics:
      elasticsearchRefs:
      - name: es-mon
        namespace: observability
  auth:
    fileRealm:
    - secretName: elastic-credentials
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kb-prod
  namespace: production
spec:
  version: 8.15.3
  count: 1
  elasticsearchRef:
    name: es-prod
  monitoring:
    metrics:
      elasticsearchRefs:
      - name: es-mon
        namespace: observability
  config:
    # https://www.elastic.co/guide/en/kibana/current/monitoring-metricbeat.html
    monitoring.kibana.collection.enabled: false
    xpack.security.audit.enabled: true
    xpack.security.audit.ignore_filters:
    - categories: [web]
    - actions: [saved_object_open_point_in_time, saved_object_close_point_in_time, saved_object_find, space_find]
  podTemplate:
    metadata:
      labels:
        scrape: kb
      annotations:
        co.elastic.logs/enabled: "true"
    spec:
      containers:
      - name: kibana
        volumeMounts:
        - name: audit-logs
          mountPath: /usr/share/kibana/logs
        env:
          - name: NODE_OPTIONS
            value: "--max-old-space-size=1024"
        resources:
          requests:
            memory: 1Gi
            cpu: 0.5
          limits:
            memory: 1.5Gi
            cpu: 1
      volumes:
      - name: audit-logs
        persistentVolumeClaim:
          claimName: kibana-audit-logs-pvc
---
# Monitoring ckuster
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: es-mon
  namespace: observability
spec:
  version: 8.15.4
  nodeSets:
  - name: default
    count: 2
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 2Gi
              cpu: 2
            limits:
              memory: 2.5Gi
    config:
      node.store.allow_mmap: false
      xpack.http.ssl.verification_mode: "none"
  auth:
    fileRealm:
    - secretName: elastic-credentials
  remoteClusters:
  - name: es-dev
    elasticsearchRef:
      name: es-dev
      namespace: development
  - name: es-prod
    elasticsearchRef:
      name: es-prod
      namespace: production
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kb-mon
  namespace: observability
spec:
  version: 8.15.4
  count: 1
  elasticsearchRef:
    name: es-mon
  config:
    # enable the UI to reflect container level CPU usage, only displays info if CPU limits are set on the monitored ES cluster
    # https://www.elastic.co/guide/en/kibana/current/monitoring-settings-kb.html
    monitoring.ui.container.elasticsearch.enabled: true
  podTemplate:
    spec:
      containers:
      - name: kibana
        env:
          - name: NODE_OPTIONS
            value: "--max-old-space-size=1024"
        resources:
          requests:
            memory: 1Gi
            cpu: 0.5
          limits:
            memory: 2.5Gi
            cpu: 1
...